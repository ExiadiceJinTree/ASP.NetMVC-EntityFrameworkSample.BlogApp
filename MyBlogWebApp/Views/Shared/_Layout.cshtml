@{
    // 現在のリクエストのコントローラ名とアクション名を取得
    var reqControllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    var reqActionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>

    @* bootstrapを適用 *@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <style type="text/css">
        body {
            padding-top: 70px;  /* bootstrapのnavigation barを(navbar-fixed-topで)表示する際に、ページ上部に70pxの余白が必要なため。 */
        }

        /* ArticleのIndexビューでの各記事項目の設定 */
        .article-body {
            height: 60px;  /* 各記事項目の高さ */

            /* 複数行の記事本文を省略表示する */
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap
        }
    </style>
</head>
<body>
    @* ヘッダーのナビゲーション部分 *@
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                @* タイトル(記事一覧へのリンク付き) *@
                @* ログイン画面でもログインをキャンセルして記事一覧画面へ戻れる *@
                @Html.ActionLink("MyBlog", "Index", new { Controller = "Articles" }, new { @class = "navbar-brand" })
            </div>
            <ul class="nav navbar-nav navbar-right">
                @if (Request.IsAuthenticated)
                {
                    <li>@Html.ActionLink("投稿する", "Create", "Articles")</li>
                    <li>@Html.ActionLink("ログアウト", "SignOut", "Login")</li>
                }
                else
                {
                    // 認証済みでないとき、ログイン画面以外ではログイン画面リンクを表示
                    if (!(reqControllerName.Equals("Login") && reqActionName.Equals("Index")))
                    {
                        <li>@Html.ActionLink("ログイン", "Index", "Login")</li>
                    }
                }
            </ul>
        </div>
    </nav>

    <div class="container">
        @if (reqControllerName.Equals("Login") && reqActionName.Equals("Index"))
        {
            @RenderBody()
        }
        else
        {
            <div class="col-md-9">
                @* 左:メインコンテンツエリア *@
                @RenderBody()
            </div>
            <div class="col-md-3">
                @* 右:サイドメニューエリア *@
                <h3>サイドメニュー</h3>
            </div>
        }
    </div>
</body>
</html>
